// Generated from c:/Users/Marcos/Desktop/TC TOMI/BaseCompiladores-master-main/src/main/java/compiladores/compiladores.g4 by ANTLR 4.13.1

package compiladores;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class compiladoresLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		NUMERO=1, COMILLA=2, INT=3, DOUBLE=4, VOID=5, CHAR=6, PYC=7, IGUAL=8, 
		COMA=9, PA=10, PB=11, LA=12, LB=13, IF=14, ELSE=15, WHILE=16, FOR=17, 
		RETURN=18, PUNTO=19, FLOTANTE=20, CARACTER=21, ADD_OP=22, SUB_OP=23, MUL_OP=24, 
		DIV_OP=25, MOD_OP=26, AND_OP=27, OR_OP=28, NOT_OP=29, EQ_OP=30, NEQ_OP=31, 
		LT_OP=32, GT_OP=33, LTE_OP=34, GTE_OP=35, INC_OP=36, DEC_OP=37, ID=38, 
		WS=39, CADENA=40;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"LETRA", "DIGITO", "NUMERO", "COMILLA", "INT", "DOUBLE", "VOID", "CHAR", 
			"PYC", "IGUAL", "COMA", "PA", "PB", "LA", "LB", "IF", "ELSE", "WHILE", 
			"FOR", "RETURN", "PUNTO", "FLOTANTE", "CARACTER", "ADD_OP", "SUB_OP", 
			"MUL_OP", "DIV_OP", "MOD_OP", "AND_OP", "OR_OP", "NOT_OP", "EQ_OP", "NEQ_OP", 
			"LT_OP", "GT_OP", "LTE_OP", "GTE_OP", "INC_OP", "DEC_OP", "ID", "WS", 
			"CADENA"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'''", "'int'", "'double'", "'void'", "'char'", "';'", "'='", 
			"','", "'('", "')'", "'{'", "'}'", "'if'", "'else'", "'while'", "'for'", 
			"'return'", "'.'", null, null, "'+'", "'-'", "'*'", "'/'", "'%'", "'&&'", 
			"'||'", "'!'", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'++'", 
			"'--'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "NUMERO", "COMILLA", "INT", "DOUBLE", "VOID", "CHAR", "PYC", "IGUAL", 
			"COMA", "PA", "PB", "LA", "LB", "IF", "ELSE", "WHILE", "FOR", "RETURN", 
			"PUNTO", "FLOTANTE", "CARACTER", "ADD_OP", "SUB_OP", "MUL_OP", "DIV_OP", 
			"MOD_OP", "AND_OP", "OR_OP", "NOT_OP", "EQ_OP", "NEQ_OP", "LT_OP", "GT_OP", 
			"LTE_OP", "GTE_OP", "INC_OP", "DEC_OP", "ID", "WS", "CADENA"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public compiladoresLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "compiladores.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000(\u00f0\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0004\u0002[\b\u0002\u000b\u0002"+
		"\f\u0002\\\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0016\u0001\u0016\u0004\u0016\u00a5\b\u0016\u000b\u0016\f\u0016\u00a6"+
		"\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018"+
		"\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b"+
		"\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d"+
		"\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0001"+
		" \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001#\u0001$\u0001"+
		"$\u0001$\u0001%\u0001%\u0001%\u0001&\u0001&\u0001&\u0001\'\u0001\'\u0003"+
		"\'\u00d5\b\'\u0001\'\u0001\'\u0001\'\u0005\'\u00da\b\'\n\'\f\'\u00dd\t"+
		"\'\u0001(\u0004(\u00e0\b(\u000b(\f(\u00e1\u0001(\u0001(\u0001)\u0001)"+
		"\u0001)\u0001)\u0005)\u00ea\b)\n)\f)\u00ed\t)\u0001)\u0001)\u0000\u0000"+
		"*\u0001\u0000\u0003\u0000\u0005\u0001\u0007\u0002\t\u0003\u000b\u0004"+
		"\r\u0005\u000f\u0006\u0011\u0007\u0013\b\u0015\t\u0017\n\u0019\u000b\u001b"+
		"\f\u001d\r\u001f\u000e!\u000f#\u0010%\u0011\'\u0012)\u0013+\u0014-\u0015"+
		"/\u00161\u00173\u00185\u00197\u001a9\u001b;\u001c=\u001d?\u001eA\u001f"+
		"C E!G\"I#K$M%O&Q\'S(\u0001\u0000\u0004\u0002\u0000AZaz\u0001\u000009\u0003"+
		"\u0000\t\n\r\r  \u0002\u0000\"\"\\\\\u00f6\u0000\u0005\u0001\u0000\u0000"+
		"\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000"+
		"\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000"+
		"\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000"+
		"\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000"+
		"\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000"+
		"\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000"+
		"\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001"+
		"\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000"+
		"\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000"+
		"\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001"+
		"\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000"+
		"\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000"+
		"\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?"+
		"\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000"+
		"\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000"+
		"\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M"+
		"\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000"+
		"\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0001U\u0001\u0000\u0000\u0000"+
		"\u0003W\u0001\u0000\u0000\u0000\u0005Z\u0001\u0000\u0000\u0000\u0007^"+
		"\u0001\u0000\u0000\u0000\t`\u0001\u0000\u0000\u0000\u000bd\u0001\u0000"+
		"\u0000\u0000\rk\u0001\u0000\u0000\u0000\u000fp\u0001\u0000\u0000\u0000"+
		"\u0011u\u0001\u0000\u0000\u0000\u0013w\u0001\u0000\u0000\u0000\u0015y"+
		"\u0001\u0000\u0000\u0000\u0017{\u0001\u0000\u0000\u0000\u0019}\u0001\u0000"+
		"\u0000\u0000\u001b\u007f\u0001\u0000\u0000\u0000\u001d\u0081\u0001\u0000"+
		"\u0000\u0000\u001f\u0083\u0001\u0000\u0000\u0000!\u0086\u0001\u0000\u0000"+
		"\u0000#\u008b\u0001\u0000\u0000\u0000%\u0091\u0001\u0000\u0000\u0000\'"+
		"\u0095\u0001\u0000\u0000\u0000)\u009c\u0001\u0000\u0000\u0000+\u009e\u0001"+
		"\u0000\u0000\u0000-\u00a2\u0001\u0000\u0000\u0000/\u00aa\u0001\u0000\u0000"+
		"\u00001\u00ac\u0001\u0000\u0000\u00003\u00ae\u0001\u0000\u0000\u00005"+
		"\u00b0\u0001\u0000\u0000\u00007\u00b2\u0001\u0000\u0000\u00009\u00b4\u0001"+
		"\u0000\u0000\u0000;\u00b7\u0001\u0000\u0000\u0000=\u00ba\u0001\u0000\u0000"+
		"\u0000?\u00bc\u0001\u0000\u0000\u0000A\u00bf\u0001\u0000\u0000\u0000C"+
		"\u00c2\u0001\u0000\u0000\u0000E\u00c4\u0001\u0000\u0000\u0000G\u00c6\u0001"+
		"\u0000\u0000\u0000I\u00c9\u0001\u0000\u0000\u0000K\u00cc\u0001\u0000\u0000"+
		"\u0000M\u00cf\u0001\u0000\u0000\u0000O\u00d4\u0001\u0000\u0000\u0000Q"+
		"\u00df\u0001\u0000\u0000\u0000S\u00e5\u0001\u0000\u0000\u0000UV\u0007"+
		"\u0000\u0000\u0000V\u0002\u0001\u0000\u0000\u0000WX\u0007\u0001\u0000"+
		"\u0000X\u0004\u0001\u0000\u0000\u0000Y[\u0003\u0003\u0001\u0000ZY\u0001"+
		"\u0000\u0000\u0000[\\\u0001\u0000\u0000\u0000\\Z\u0001\u0000\u0000\u0000"+
		"\\]\u0001\u0000\u0000\u0000]\u0006\u0001\u0000\u0000\u0000^_\u0005\'\u0000"+
		"\u0000_\b\u0001\u0000\u0000\u0000`a\u0005i\u0000\u0000ab\u0005n\u0000"+
		"\u0000bc\u0005t\u0000\u0000c\n\u0001\u0000\u0000\u0000de\u0005d\u0000"+
		"\u0000ef\u0005o\u0000\u0000fg\u0005u\u0000\u0000gh\u0005b\u0000\u0000"+
		"hi\u0005l\u0000\u0000ij\u0005e\u0000\u0000j\f\u0001\u0000\u0000\u0000"+
		"kl\u0005v\u0000\u0000lm\u0005o\u0000\u0000mn\u0005i\u0000\u0000no\u0005"+
		"d\u0000\u0000o\u000e\u0001\u0000\u0000\u0000pq\u0005c\u0000\u0000qr\u0005"+
		"h\u0000\u0000rs\u0005a\u0000\u0000st\u0005r\u0000\u0000t\u0010\u0001\u0000"+
		"\u0000\u0000uv\u0005;\u0000\u0000v\u0012\u0001\u0000\u0000\u0000wx\u0005"+
		"=\u0000\u0000x\u0014\u0001\u0000\u0000\u0000yz\u0005,\u0000\u0000z\u0016"+
		"\u0001\u0000\u0000\u0000{|\u0005(\u0000\u0000|\u0018\u0001\u0000\u0000"+
		"\u0000}~\u0005)\u0000\u0000~\u001a\u0001\u0000\u0000\u0000\u007f\u0080"+
		"\u0005{\u0000\u0000\u0080\u001c\u0001\u0000\u0000\u0000\u0081\u0082\u0005"+
		"}\u0000\u0000\u0082\u001e\u0001\u0000\u0000\u0000\u0083\u0084\u0005i\u0000"+
		"\u0000\u0084\u0085\u0005f\u0000\u0000\u0085 \u0001\u0000\u0000\u0000\u0086"+
		"\u0087\u0005e\u0000\u0000\u0087\u0088\u0005l\u0000\u0000\u0088\u0089\u0005"+
		"s\u0000\u0000\u0089\u008a\u0005e\u0000\u0000\u008a\"\u0001\u0000\u0000"+
		"\u0000\u008b\u008c\u0005w\u0000\u0000\u008c\u008d\u0005h\u0000\u0000\u008d"+
		"\u008e\u0005i\u0000\u0000\u008e\u008f\u0005l\u0000\u0000\u008f\u0090\u0005"+
		"e\u0000\u0000\u0090$\u0001\u0000\u0000\u0000\u0091\u0092\u0005f\u0000"+
		"\u0000\u0092\u0093\u0005o\u0000\u0000\u0093\u0094\u0005r\u0000\u0000\u0094"+
		"&\u0001\u0000\u0000\u0000\u0095\u0096\u0005r\u0000\u0000\u0096\u0097\u0005"+
		"e\u0000\u0000\u0097\u0098\u0005t\u0000\u0000\u0098\u0099\u0005u\u0000"+
		"\u0000\u0099\u009a\u0005r\u0000\u0000\u009a\u009b\u0005n\u0000\u0000\u009b"+
		"(\u0001\u0000\u0000\u0000\u009c\u009d\u0005.\u0000\u0000\u009d*\u0001"+
		"\u0000\u0000\u0000\u009e\u009f\u0003\u0005\u0002\u0000\u009f\u00a0\u0003"+
		")\u0014\u0000\u00a0\u00a1\u0003\u0005\u0002\u0000\u00a1,\u0001\u0000\u0000"+
		"\u0000\u00a2\u00a4\u0003\u0007\u0003\u0000\u00a3\u00a5\u0003\u0001\u0000"+
		"\u0000\u00a4\u00a3\u0001\u0000\u0000\u0000\u00a5\u00a6\u0001\u0000\u0000"+
		"\u0000\u00a6\u00a4\u0001\u0000\u0000\u0000\u00a6\u00a7\u0001\u0000\u0000"+
		"\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8\u00a9\u0003\u0007\u0003"+
		"\u0000\u00a9.\u0001\u0000\u0000\u0000\u00aa\u00ab\u0005+\u0000\u0000\u00ab"+
		"0\u0001\u0000\u0000\u0000\u00ac\u00ad\u0005-\u0000\u0000\u00ad2\u0001"+
		"\u0000\u0000\u0000\u00ae\u00af\u0005*\u0000\u0000\u00af4\u0001\u0000\u0000"+
		"\u0000\u00b0\u00b1\u0005/\u0000\u0000\u00b16\u0001\u0000\u0000\u0000\u00b2"+
		"\u00b3\u0005%\u0000\u0000\u00b38\u0001\u0000\u0000\u0000\u00b4\u00b5\u0005"+
		"&\u0000\u0000\u00b5\u00b6\u0005&\u0000\u0000\u00b6:\u0001\u0000\u0000"+
		"\u0000\u00b7\u00b8\u0005|\u0000\u0000\u00b8\u00b9\u0005|\u0000\u0000\u00b9"+
		"<\u0001\u0000\u0000\u0000\u00ba\u00bb\u0005!\u0000\u0000\u00bb>\u0001"+
		"\u0000\u0000\u0000\u00bc\u00bd\u0005=\u0000\u0000\u00bd\u00be\u0005=\u0000"+
		"\u0000\u00be@\u0001\u0000\u0000\u0000\u00bf\u00c0\u0005!\u0000\u0000\u00c0"+
		"\u00c1\u0005=\u0000\u0000\u00c1B\u0001\u0000\u0000\u0000\u00c2\u00c3\u0005"+
		"<\u0000\u0000\u00c3D\u0001\u0000\u0000\u0000\u00c4\u00c5\u0005>\u0000"+
		"\u0000\u00c5F\u0001\u0000\u0000\u0000\u00c6\u00c7\u0005<\u0000\u0000\u00c7"+
		"\u00c8\u0005=\u0000\u0000\u00c8H\u0001\u0000\u0000\u0000\u00c9\u00ca\u0005"+
		">\u0000\u0000\u00ca\u00cb\u0005=\u0000\u0000\u00cbJ\u0001\u0000\u0000"+
		"\u0000\u00cc\u00cd\u0005+\u0000\u0000\u00cd\u00ce\u0005+\u0000\u0000\u00ce"+
		"L\u0001\u0000\u0000\u0000\u00cf\u00d0\u0005-\u0000\u0000\u00d0\u00d1\u0005"+
		"-\u0000\u0000\u00d1N\u0001\u0000\u0000\u0000\u00d2\u00d5\u0003\u0001\u0000"+
		"\u0000\u00d3\u00d5\u0005_\u0000\u0000\u00d4\u00d2\u0001\u0000\u0000\u0000"+
		"\u00d4\u00d3\u0001\u0000\u0000\u0000\u00d5\u00db\u0001\u0000\u0000\u0000"+
		"\u00d6\u00da\u0003\u0001\u0000\u0000\u00d7\u00da\u0003\u0003\u0001\u0000"+
		"\u00d8\u00da\u0005_\u0000\u0000\u00d9\u00d6\u0001\u0000\u0000\u0000\u00d9"+
		"\u00d7\u0001\u0000\u0000\u0000\u00d9\u00d8\u0001\u0000\u0000\u0000\u00da"+
		"\u00dd\u0001\u0000\u0000\u0000\u00db\u00d9\u0001\u0000\u0000\u0000\u00db"+
		"\u00dc\u0001\u0000\u0000\u0000\u00dcP\u0001\u0000\u0000\u0000\u00dd\u00db"+
		"\u0001\u0000\u0000\u0000\u00de\u00e0\u0007\u0002\u0000\u0000\u00df\u00de"+
		"\u0001\u0000\u0000\u0000\u00e0\u00e1\u0001\u0000\u0000\u0000\u00e1\u00df"+
		"\u0001\u0000\u0000\u0000\u00e1\u00e2\u0001\u0000\u0000\u0000\u00e2\u00e3"+
		"\u0001\u0000\u0000\u0000\u00e3\u00e4\u0006(\u0000\u0000\u00e4R\u0001\u0000"+
		"\u0000\u0000\u00e5\u00eb\u0005\"\u0000\u0000\u00e6\u00ea\b\u0003\u0000"+
		"\u0000\u00e7\u00e8\u0005\\\u0000\u0000\u00e8\u00ea\t\u0000\u0000\u0000"+
		"\u00e9\u00e6\u0001\u0000\u0000\u0000\u00e9\u00e7\u0001\u0000\u0000\u0000"+
		"\u00ea\u00ed\u0001\u0000\u0000\u0000\u00eb\u00e9\u0001\u0000\u0000\u0000"+
		"\u00eb\u00ec\u0001\u0000\u0000\u0000\u00ec\u00ee\u0001\u0000\u0000\u0000"+
		"\u00ed\u00eb\u0001\u0000\u0000\u0000\u00ee\u00ef\u0005\"\u0000\u0000\u00ef"+
		"T\u0001\u0000\u0000\u0000\t\u0000\\\u00a6\u00d4\u00d9\u00db\u00e1\u00e9"+
		"\u00eb\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}